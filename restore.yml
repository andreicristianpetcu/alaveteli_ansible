# Playbook for restoring your remote instance
---

- hosts: alaveteli
  vars_files:
    - roles/alaveteli/vars/encrypted.yml
    - roles/alaveteli/vars/main.yml
    - roles/andreaswolf.letsencrypt/defaults/main.yml

  vars:
    backup_dir: "/tmp/alaveteli"
  tasks:
    - name: Push email files from local to remote
      synchronize: src={{ backup_dir }}/files dest=/srv/www/current/ mode=push

    - name: Push database backup
      synchronize: dest=/tmp/alaveteli.sql src={{ backup_dir }}/alaveteli.sql mode=push

    - name: Stop nginx
      service: name=nginx state=stopped

    - name: Restart postgresql to drop all connections
      service: name=postgresql state=restarted

    - name: Drop old databse
      command: "su - postgres -c 'dropdb alaveteli'"
      ignore_errors: true

    - include: roles/alaveteli/tasks/create_postgresqldb.yml

    - name: Restore the backed up db
      command: "su - postgres -c 'psql -d alaveteli -U alaveteli -f /tmp/alaveteli.sql'"

    - name: Migrate the database to the latest schema
      command: "su - deploy -c 'cd /srv/www/current && RAILS_ENV=production bundle exec rake db:migrate'"
      notify: nginx restart

    - name: Parse raw emails
      command: "su - deploy -c 'cd /srv/www/current && echo \"IncomingMessage.all.each { |incoming_message| incoming_message.parse_raw_email!(true) }\" | RAILS_ENV=production bundle exec rails c'"
      tags: xapian
      notify: nginx restart

    - name: Rebuild Xapian indes
      command: "su - deploy -c 'RAILS_ENV=production /srv/www/current/script/rebuild-xapian-index models={{ item }}'"
      with_items:
        - 'PublicBody'
        - 'User'
        - 'InfoRequestEvent'
      tags: xapian
      notify: nginx restart

    - name: Restart nginx
      service: name=nginx state=restarted
