---
- include_vars: encrypted.yml

- name: Ensure that deploy owns /srv/www
  file: owner=deploy group=deploy path=/srv/www state=directory

# Installing via bash so that rbenv is used. Otherwise would install gems for default system ruby
# TODO When gem is already installed stop it from saying something has changed
- name: Install bundler gem
  command: bash -lc "gem install bundler"
  sudo: true
  sudo_user: deploy

- name: Install packages required by Alaveteli
  apt: name={{ item }} state=present
  with_items:
    - libicu-dev
    - libmagic-dev
    - libmagickwand-dev
    - xapian-tools
    - uuid-dev

- name: Create database
  postgresql_db: name=alaveteli

- name: Create posgresql role
  postgresql_user: db=alaveteli name=alaveteli password={{ db_password }}

- name: Copy over database configuration for application
  template: src=database.yml dest=/srv/www/shared/database.yml owner=deploy group=deploy
  notify: nginx restart

- name: Generate the overall nginx config
  template: src=nginx.conf dest=/etc/nginx/nginx.conf
  notify: nginx reload

- name: Generate the nginx config for the app
  template: src=default dest=/etc/nginx/sites-available/ owner=root group=root mode=644
  notify: nginx reload

- name: Copy across the main Alaveteli config
  template: src=general.yml dest=/srv/www/shared owner=deploy group=deploy
